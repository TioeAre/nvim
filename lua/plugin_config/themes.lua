local M = {}

M.theme_config = function()
    vim.cmd("colorscheme nightfox")
end

-- nvim-lualine/lualine.nvim
M.config_lualine = function()
    require("lualine").setup({
        options = {
            theme = "modus-vivendi",
            globalstatus = true,
            component_separators = {
                left = ">",
                right = "<",
            },
            section_separators = {
                left = "",
                right = "",
            },
        },
        sections = {
            lualine_a = { "mode" },
            lualine_b = { "branch", "diff", "diagnostics" },
            lualine_c = { "os.date()" },

            lualine_x = { "filesize", "encoding", "fileformat", "filetype" },
            lualine_y = { "progress" },
            lualine_z = { "location" },
        },
        tabline = {},
    })
end

-- akinsho/bufferline.nvim
M.config_bufferline = function()
    require("bufferline").setup({
        options = {
            mode = "buffers", -- "buffers" "tabs"
            move_wraps_at_ends = true,
            color_icons = true,
            show_buffer_icons = true,
            show_buffer_close_icons = true,
            show_tab_indicators = false,
            show_duplicate_prefix = false,
            always_show_bufferline = true,
            hover = {
                enabled = true,
                delay = 200,
                reveal = { "close" },
            },
            numbers = function(opts)
                return string.format("%s|%s", opts.id, opts.raise(opts.ordinal))
            end,
            groups = {
                items = {
                    require("bufferline.groups").builtin.pinned:with({
                        icon = "",
                    }),
                },
            },
            offsets = {
                {
                    filetype = "neo-tree",
                    text = function()
                        return vim.fn.getcwd()
                    end,
                    highlight = "Directory",
                    separator = true, -- use a "true" to enable the default, or set your own character
                },
                {
                    filetype = "filetree",
                    text = "",
                    highlight = "Explorer",
                    text_align = "left",
                },
                {
                    filetype = "NvimTree",
                    text = function()
                        return vim.fn.getcwd()
                    end,
                    highlight = "Directory",
                    separator = true, -- use a "true" to enable the default, or set your own character
                },
            },
        },
    })
    vim.g.transparent_groups = vim.list_extend(
        vim.g.transparent_groups or {},
        vim.tbl_map(function(v)
            return v.hl_group
        end, vim.tbl_values(require("bufferline.config").highlights))
    )
end
M.keys_bufferline = {
    -- {
    --     "<leader>bn",
    --     ":BufferLineCycleNext<cr>", -- 切换到下一个buffer
    --     desc = "change to next buffer"
    -- }, {
    --     "<leader>bm",
    --     ":BufferLineCyclePrev<cr>",   -- 切换到上一个buffer
    --     desc = "change to preview buffer"
    -- },
    -- {
    --     "<leader>bcr",
    --     ":BufferLineCloseRight<cr>",
    --     desc = "close right buffers"
    -- }, {
    --     "<leader>bcf",
    --     ":BufferLineCloseLeft<cr>",
    --     desc = "close left buffers"
    -- }, {
    --     "<leader>bco",
    --     ":BufferLineCloseOthers<cr>",
    --     desc = "close other buffers"
    -- },
    -- {
    --     "<leader>bg",
    --     ":BufferLinePick<cr>",
    --     desc = "go to certain buffer"
    -- },
    -- {
    --     "<leader>bD",
    --     ":BufferLinePickClose<cr>",
    --     desc = "close certain buffer"
    -- }
}

-- goolord/alpha-nvim
M.config_alpha = function()
    local alpha = require("alpha")
    local dashboard = require("alpha.themes.dashboard")
    dashboard.section.header.val =
        { -- [[⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿]],
            -- [[⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⣠⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿]],
            -- [[⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣡⣾⣿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣟⠻⣿⣿⣿⣿⣿⣿⣿⣿]],
            -- [[⣿⣿⣿⣿⣿⣿⣿⣿⡿⢫⣷⣿⣿⣿⣿⣿⣿⣿⣾⣯⣿⡿⢧⡚⢷⣌⣽⣿⣿⣿⣿⣿⣶⡌⣿⣿⣿⣿⣿⣿]],
            -- [[⣿⣿⣿⣿⣿⣿⣿⣿⠇⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣮⣇⣘⠿⢹⣿⣿⣿⣿⣿⣻⢿⣿⣿⣿⣿⣿]],
            -- [[⣿⣿⣿⣿⣿⣿⣿⣿⠀⢸⣿⣿⡇⣿⣿⣿⣿⣿⣿⣿⣿⡟⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣻⣿⣿⣿⣿]],
            -- [[⣿⣿⣿⣿⣿⣿⣿⡇⠀⣬⠏⣿⡇⢻⣿⣿⣿⣿⣿⣿⣿⣷⣼⣿⣿⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⢻⣿⣿⣿⣿]],
            -- [[⣿⣿⣿⣿⣿⣿⣿⠀⠈⠁⠀⣿⡇⠘⡟⣿⣿⣿⣿⣿⣿⣿⣿⡏⠿⣿⣟⣿⣿⣿⣿⣿⣿⣿⣿⣇⣿⣿⣿⣿]],
            -- [[⣿⣿⣿⣿⣿⣿⡏⠀⠀⠐⠀⢻⣇⠀⠀⠹⣿⣿⣿⣿⣿⣿⣩⡶⠼⠟⠻⠞⣿⡈⠻⣟⢻⣿⣿⣿⣿⣿⣿⣿]],
            -- [[⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⢿⠀⡆⠀⠘⢿⢻⡿⣿⣧⣷⢣⣶⡃⢀⣾⡆⡋⣧⠙⢿⣿⣿⣟⣿⣿⣿⣿]],
            -- [[⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⡥⠂⡐⠀⠁⠑⣾⣿⣿⣾⣿⣿⣿⡿⣷⣷⣿⣧⣾⣿⣿⣿⣿⣿⣿⣿]],
            -- [[⣿⣿⡿⣿⣍⡴⠆⠀⠀⠀⠀⠀⠀⠀⠀⣼⣄⣀⣷⡄⣙⢿⣿⣿⣿⣿⣯⣶⣿⣿⢟⣾⣿⣿⢡⣿⣿⣿⣿⣿]],
            -- [[⣿⡏⣾⣿⣿⣿⣷⣦⠀⠀⠀⢀⡀⠀⠀⠠⣭⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⣡⣾⣿⣿⢏⣾⣿⣿⣿⣿⣿]],
            -- [[⣿⣿⣿⣿⣿⣿⣿⣿⡴⠀⠀⠀⠀⠀⠠⠀⠰⣿⣿⣿⣷⣿⠿⠿⣿⣿⣭⡶⣫⠔⢻⢿⢇⣾⣿⣿⣿⣿⣿⣿]],
            -- [[⣿⣿⣿⡿⢫⣽⠟⣋⠀⠀⠀⠀⣶⣦⠀⠀⠀⠈⠻⣿⣿⣿⣾⣿⣿⣿⣿⡿⣣⣿⣿⢸⣾⣿⣿⣿⣿⣿⣿⣿]],
            -- [[⡿⠛⣹⣶⣶⣶⣾⣿⣷⣦⣤⣤⣀⣀⠀⠀⠀⠀⠀⠀⠉⠛⠻⢿⣿⡿⠫⠾⠿⠋⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿]],
            -- [[⢀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣀⡆⣠⢀⣴⣏⡀⠀⠀⠀⠉⠀⠀⢀⣠⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿]],
            -- [[⠿⠛⠛⠛⠛⠛⠛⠻⢿⣿⣿⣿⣿⣯⣟⠷⢷⣿⡿⠋⠀⠀⠀⠀⣵⡀⢠⡿⠋⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿]],
            -- [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠛⢿⣿⣿⠂⠀⠀⠀⠀⠀⢀⣽⣿⣿⣿⣿⣿⣿⣿⣍⠛⠿⣿⣿⣿⣿⣿⣿]],
            -- "⣿⣿⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⣿⣿⣿⣎⢿⣿⣿⣿⣿⣎⢿⣿⣿⣿⣶⣹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣻⣽⣿⣯⣷⣿⣿⣿⣟⣯⡿⣿⣿⣟⣿⣿⣮⠻⣿⣿⣿⣿⡞⣿⡟⣽⣿⡇⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿",
            -- "⣿⣿⡾⣿⣿⣿⣿⣷⣿⣷⣿⣷⣿⣿⣾⣿⣯⣷⣿⣿⣿⣾⣿⣿⣿⣿⣾⡽⡿⣿⣿⢿⢿⣿⡇⣿⣿⣶⢻⣿⣿⣷⡝⢿⣿⣿⣿⡼⣿⣮⡻⣻⡹⣿⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⡗⣿⣿⣷⣟⣿⡿⣿⣿⣿⣿⣿⢿⣿⢿⣷⡝⡿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣯⣟⢿⣝⣿⣿⡙⣿⣿⣷⡻⣿⣿⣿⣧⡻⣿⣟⣧⢷⡻⣿⡵⣻⡹⣿⣿⣻⣿⣿⣿⣿⣿",
            -- "⣿⣿⡇⣿⣻⣞⣺⣿⡯⣿⣿⣾⣿⣿⣿⣿⣏⣿⣿⣞⣮⢝⣟⣯⣿⣿⢿⣻⣿⣿⣿⣷⣯⣝⢿⣷⣻⣿⣿⣿⣮⡻⣿⣿⣷⡝⣿⣿⣟⢿⣝⣿⡱⡍⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⡇⡷⢗⣵⣿⣯⣗⣿⣿⡿⣿⣽⣿⣿⣧⠻⣿⣷⣭⢿⣙⢶⣯⣽⣻⠿⠿⣿⣽⣿⣿⣿⣮⣻⢧⠿⣿⣿⣿⣿⣮⣝⣻⣻⢽⣿⡿⣷⣝⠼⣗⡧⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⢣⣷⣿⣿⡿⣽⡸⣾⣿⣿⣿⣿⣿⣿⣽⡾⡽⣿⣿⣰⡽⡮⡪⣟⠿⣿⣮⣞⠯⡩⢽⣞⡻⡿⢿⣷⣯⠿⣯⡻⢿⣿⣿⣷⣝⣻⣿⣮⢿⣷⣵⡣⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣽⣿⣿⡿⣿⣳⣿⣺⠸⣿⣿⡿⣿⣻⣽⣿⣷⢻⡼⣿⣗⠿⢝⣪⣦⠻⣶⣪⣟⡻⡮⣇⡟⣿⣝⠿⣾⣮⠿⣚⢿⣵⣝⣻⡻⣿⣷⣙⡿⣷⣻⣿⣿⡜⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⡿⣳⢺⣿⣸⡎⡼⣿⣿⣿⣿⣿⣿⣿⡟⢗⢿⡧⣿⢿⡿⢚⢋⣖⣹⡙⠋⠯⠷⣳⣦⡪⡽⣊⣟⢿⣝⢿⡮⣻⢷⣝⣔⢶⣭⢿⣝⢧⣿⣿⡣⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⢺⣿⣷⣟⢿⣽⣿⠏⣗⡕⡪⣿⣻⣿⣿⢿⣿⣿⡯⣹⢽⡾⢣⣶⣟⣾⣿⣿⣿⢸⢅⢌⣸⣾⣯⣞⣿⣷⡹⡸⣝⡯⡻⣷⣛⡾⣽⣿⣿⣿⣿⡺⡿⣾⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⡏⣿⡷⣯⣗⣿⣿⢈⠞⡴⣗⡎⣎⣻⢽⣿⣿⣿⣿⢪⣯⣮⣿⣿⣷⠿⣿⣯⠷⡿⣀⢸⣿⣿⣷⡷⣿⣿⣜⠮⠻⣿⣿⣷⣿⣿⣺⣷⡽⣿⣿⣿⢹⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣷⡸⣟⣗⣷⢻⣿⢽⡘⣎⢏⢴⢑⠪⣱⢏⡻⣿⣿⢜⣿⣿⣿⣻⣯⣷⢷⢾⣽⡽⣇⣽⣿⣿⣿⣿⣿⣿⣷⣕⣷⢻⣿⣿⣿⣿⣿⣿⣿⡹⣿⣿⣇⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣮⡕⣿⢹⣿⢸⣳⢊⢆⢯⡟⣯⡞⣿⣭⣮⣻⢱⣿⣿⣿⣿⣯⣯⣭⣴⣷⣾⣿⣿⣿⣿⣯⣿⣿⣿⢿⣿⣻⠌⣧⣿⣿⣿⣿⣿⣿⡺⣹⡻⣿⡜⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⢦⠻⣿⣠⢽⢞⣮⣻⣿⡓⣕⢻⣿⣿⢯⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣿⣿⡿⣿⣿⣿⣿⢹⡼⣺⢽⣿⣿⣿⡾⣿⢣⢯⢿⣭⢻⣿⣿⣿⣽⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⡧⣿⡇⣗⡗⣯⣧⢝⣿⡽⣻⣿⣿⣿⣿⣿⣿⣻⣿⣿⡿⣿⣟⣿⣽⣿⣿⣾⣿⣿⣿⣿⣿⣿⡟⣫⣻⡥⣯⢻⣿⣿⣟⣧⣿⡏⣏⡾⣿⣸⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣌⣷⢣⢯⣻⢿⣮⣾⣾⣿⣿⢿⣻⣿⣯⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣿⣿⣿⢿⡗⣿⣿⡿⣽⢸⡭⣿⣿⡷⣽⣺⣷⢻⢡⣿⢮⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣽⣞⣯⢾⣿⣯⣪⢍⢻⣚⡿⢿⣿⣿⣿⣿⢿⢯⠷⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣷⣿⡿⣯⣻⣛⡫⢕⡜⡇⣿⣿⡎⣿⣺⡿⣹⣚⡿⣽⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣻⣿⡮⣚⢿⣿⣶⢹⣞⢾⢽⣿⣿⠟⣯⣾⣿⣾⡯⣿⣿⣿⣻⣷⣿⣿⣿⡿⣟⡿⡙⢕⠋⢌⠝⣪⡺⣎⢗⣿⣿⣗⣻⢽⣷⣽⣧⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣓⣿⣦⣻⢿⣸⣗⢧⣝⢿⣿⣬⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡾⠟⡫⢐⠄⠆⠕⡢⢃⢓⣻⡕⣹⡿⢿⣮⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣽⣿⣿⣿⣿⣿⢸⢯⣯⣟⣯⣮⣻⢿⣿⣿⣷⣿⣿⣿⢿⣻⡿⢓⠣⢂⠂⡊⡢⠡⠍⠎⢄⠥⠘⠭⠯⠯⠞⢛⢿⢿⣟⣿⣻⣻⣟⠿⢷⣿⣿⣷⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡯⡯⢾⢸⣯⡷⣟⡾⡪⢮⡫⣿⣿⢿⠟⡏⣑⣨⣐⣡⣑⡌⠐⠌⡜⡘⡌⣢⠵⡋⠏⡍⠍⡍⠕⠮⢍⡻⢿⣿⣿⣿⣿⣿⣾⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣳⣝⢮⢗⡿⡷⣟⢧⣏⡮⣿⣛⡳⢒⣥⣏⣯⣻⢝⢻⢻⣿⣿⣿⣿⣾⡜⡮⢅⢇⢕⢱⠡⠑⠔⡡⢈⡂⣉⠲⣙⢿⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣽⣿⣾⢿⡵⣗⡽⢾⣻⣫⣿⣵⣿⣿⠿⣩⡾⣽⣾⣾⣾⣾⣷⣾⣷⣶⣷⣥⣣⠧⡝⣒⣅⡣⣶⢕⡿⡇⡿⡽⣸⢧⢣⢻⢨⡎⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠛⣵⢯⡷⣟⣿⣿⣿⣿⣿⣯⣻⣿⣿⣿⣿⣿⢱⢑⢿⡳⡬⡿⡖⣟⠧⢙⡋⣮⡽⡬⣸⢶⢸⢜⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢣⣟⣯⢟⣽⣿⣿⣿⣿⣿⣿⣿⣷⣮⢻⣿⣿⣿⢸⢨⣮⣭⡷⡷⣞⣾⣻⢯⢷⡹⡽⢝⢕⡫⣣⡇⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣻⣿⣿⣿⣿⣿⣿⣿⣿⢇⣾⣽⣞⡯⣟⣿⣿⣿⣿⣿⢿⣿⣿⣿⣷⣝⣿⣿⣧⡺⠽⣾⣫⣛⣫⡮⣭⣳⣳⣾⡺⠯⠷⡻⣙⠜⡽⣿⣿⣿⣿⣿⣿",
            -- "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠤⠐⠠⢀⡀⢀⢀⣠⢒⢉⠁⠒⠠⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
            -- "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠄⠂⠁⠀⠀⠀⠀⠀⠈⠐⠢⠀⡀⠀⠁⠃⢂⠀⢋⠐⠤⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
            -- "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠔⠑⠀⠀⠁⠈⠈⠈⠐⠐⠠⠀⣀⠀⠀⠀⠀⠀⠀⠀⠂⠀⠤⠐⢀⢈⡡⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
            -- "⠀⠀⠀⠀⢀⣀⠤⠔⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠁⠀⠀⠀⡀⠀⠀⠀⠀⠈⠠⠥⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
            -- "⠀⠀⡠⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠐⠢⢀⠀⠀⠀⠀⢄⠀⢇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
            -- "⠀⡔⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠑⠂⢄⠀⠡⠐⠬⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
            -- "⢐⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢄⠀⠀⠀⠀⢃⠀⠀⠀⠈⡄⠀⠀       ",
            -- "⠀⡂⠀⠀⠀⠀⡀⠄⠀⠀⢀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠐⢄⠀⠀⠂⠀⠀⠀⡆⠀⠐⡄⠀⠈⠢⡀⠀⠀⠈⠆⠐⢄⠀⢡⠀⠀⠀⠀⠀⠀⠀  ",
            -- "⠀⡇⠀⠀⡀⠄⠀⠀⠀⠀⠀⠀⠀⠀⠐⣀⠀⠀⠁⠀⠀⠀⠀⠁⠢⢀⠐⢊⠀⠡⠀⠀⠐⡄⠀⠀⠑⠤⠀⠀⠸⠠⡀⠢⡡⢂⠀       ",
            -- "⠀⡂⠄⡐⠌⠀⢐⠀⠀⠐⠀⠀⠈⢐⠀⠐⡑⠤⠐⡀⠈⠀⠀⠀⠀⠀⠁⠊⢄⠀⢣⠀⠀⠈⠢⡀⠀⠀⠱⠀⠀⠡⠐⡀⠰⠹⡀⠀⠀⠀⠀⠀⠀⠀",
            -- "⠀⡊⡐⠈⠀⠀⢌⠀⠀⠀⠀⡀⠄⠈⡄⠀⠐⡌⠤⡈⠐⠠⢄⡈⠀⠀⠠⠀⠈⠢⢈⢂⠀⠀⠀⠈⠢⠤⣀⠃⠀⢀⠑⠬⡀⠆⡃⠀⠀⠀⠀⠀⠀⠀",
            -- "⢀⠃⠐⠀⢠⠊⡊⡀⠀⠈⠀⠀⠀⠀⠅⠆⠀⠡⠒⢌⢅⢢⣀⠈⠊⠥⡣⡐⠢⡠⢀⣀⠑⢀⠐⠄⡀⠀⠀⠉⢄⠀⠢⠀⠈⠢⡀⠀⠀⠀⠀⠀⠀ ",
            -- "⠀⠀⠀⠠⡠⠐⠅⣇⠀⠀⠀⠀⠀⠀⠨⡈⡄⢨⠤⠒⠊⡂⠆⡉⠐⠢⠨⠌⢢⣈⠢⢀⠈⠢⠑⠌⡈⠂⠆⢄⣀⡑⢄⠑⠄⠀⢘⠀⠀⠀⠀⠀⠀⠀",
            -- "⡄⠀⠀⠅⠆⠀⢁⢂⠧⡀⠀⠂⠀⠀⠀⠰⠡⢐⠄⣐⡔⢫⠋⠉⠙⢻⢻⣬⠔⠀⢎⠃⠁⠦⡐⠠⠊⠂⢌⢈⠆⠀⠀⠒⢐⠀⠨⠀⠀⠀⠀⠀⠀⠀",
            -- "⢃⠀⠨⢐⠁⠀⣳⡘⡱⠪⡢⡀⠀⠀⠁⠀⢋⢂⠔⠅⠀⠨⠀⠀⠀⠆⣜⠇⠁⠀⠂⡁⠀⢱⠱⡈⠁⠒⠀⠐⠂⠠⡀⠀⠀⢦⠁⠀⠀⠀⠀⠀⠀⠀",
            -- "⠸⠀⠂⡂⠄⢨⢂⢖⢡⡨⢖⡬⣂⠔⡀⠀⠸⠀⠀⠀⠀⠀⡒⠒⢘⠂⢃⠃⠀⠀⠀⠀⠀⠨⠺⢂⠀⠀⠀⠀⠀⠀⠡⠀⠀⠸⡀⠀⠀⠀⠀⠀⠀⠀",
            -- "⠀⠉⠢⡂⠇⢐⡅⢊⢜⡆⢥⠈⡆⠡⠐⢄⢘⠀⠀⠀⠀⠅⠤⠱⠒⠈⠀⠀⠀⠀⡀⠄⠀⠀⠁⢨⡌⠄⠀⠂⠀⠀⡈⡑⡀⠀⢡⠀⠀⠀⠀⠀⠀⠀",
            -- "⠀⠀⠀⠑⣅⠀⠝⡄⡇⠢⠀⢄⠝⠄⠀⢀⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⢨⠰⠉⡠⠀⠀⠀⡄⠘⢠⠃⠐⡄⠀⠀⠀⠀⠀⠀",
            -- "⠀⠀⠀⠀⠘⡀⠸⡨⡂⠀⢧⠀⡢⠄⠀⠀⠀⠀⠀⠀⠁⠀⠀⢀⠀⠀⠠⠀⠀⢀⠀⠀⠀⠀⡂⠬⠐⡇⠬⠀⠀⠠⢠⠀⠃⡜⠀⢅⠀⠀⠀⠀⠀⠀",
            -- "⠀⠀⠀⠀⠀⠱⡀⡒⡐⠠⡁⣀⠀⠀⢀⠠⠀⠀⠀⠂⠀⠀⠠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢑⠀⠀⣐⢸⢘⠀⠀⠌⡌⠀⢸⠰⡅⡐⠀⠀⠀⠀⠀⠀",
            -- "⠀⠀⠀⠀⠀⠀⠐⡐⡅⠀⠡⡊⡊⠔⡐⠀⠀⠀⡠⠠⠄⢡⠀⠀⠀⠀⠠⠐⠀⢀⠠⠀⡠⢐⣊⠂⡵⠨⢎⠀⠀⠱⢹⠀⡸⠈⠄⠂⠀⠀⠀⠀⠀⠀",
            -- "⠀⠀⠀⠀⠀⠐⠀⠨⠢⠄⠀⡃⢨⠢⡂⠀⠴⠁⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⢀⡤⣞⢮⡻⡼⣍⠢⡁⡕⠀⠀⡊⠄⠂⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀",
            -- "⠀⠀⠀⠀⠀⠀⠀⠁⠀⠈⠀⡂⢌⠢⠈⡂⢄⠈⠀⠀⡀⠀⠀⠀⡀⠁⢀⡬⣼⣫⢮⣝⢽⢺⡺⡵⡥⠠⠢⠔⣁             ",
            -- "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠱⡐⠔⠠⢀⠂⢍⡒⢄⠀⠀⢀⡠⡴⠞⠽⠮⢏⣞⢷⢜⡮⣳⠽⡊⣭⡩⣱⡩⡥⣒⠤⡀⠀⠀⠀       ",
            -- "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠤⡃⡬⠁⢂⠠⡍⠢⠥⠢⢨⠍⠧⠥⠤⠥⠠⣄⠀⡀⠈⠁⣑⢊⢎⢮⢎⢮⢳⠽⡺⡳⠽⡮⡕⡄⠀⠀⠀⠀⠀⠀⠀⠀",
            -- "⠀⠀⠀⠀⠀⠀⠀⢀⠀⠅⠑⠊⠄⠌⠐⠀⠀⢀⡠⠔⢁⠂⠂⠁⠁⠈⠁⠁⠁⠑⠊⠱⢆⢋⠪⡊⠹⡀⠈⡇⠨⡂⢱⢕⠸⡜⡄⠀⠀⠀⠀⠀⠀⠀",
            -- "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠡⠐⢈⠀⠀⠀⠀⠀⠀⠢⡀⠀⠀⠀⢸⡸⡂⢨⣑⡈⠦⠅⠏⢚⠓⠨⣙⡉⢱⢢⠀⠀⠀⠀⠀⠀⠀",
            -- "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⡰⢁⠡⠨⢀⠀⠀⠀⠀⠀⠀⠀⠈⢂⠀⠀⠘⢩⠉⠀⠄⠄⡡⣈⠌⠬⠪⠒⠒⠊⠌⡊⡂⠀⠀⠀⠀⠀⠀",
            -- "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠃⠠⠐⡈⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠡⡀⠀⢓⠒⠁⠡⢉⢐⣀⡊⡰⢤⠕⠑⠣⡩⠸⢂⠄⠀⠀⠀⠀⠀",
            -- "             ⡀⠀⠁⠀⡀⠀⡀⢀⠀⠀⠀⢀⠀⢀⠀⡀⠀⠀⠢⠀⢐⢃⠊⠈⠈⠀⠀⠀⡀⠀⡊⢀⠡⠁⡐⠑⠄⠀⠀⠀⠀",
            -- "⠄⠄⠄⠄⠄⠄⠄⢸⠿⣟⣽⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣻⣿⣧⠈⣿⣿⣾⣺⣷⣬⣻⠿⣿⣿⡆⠠⠁⠄⠄⠄⠄⠄",
            -- "⠄⠄⠄⢀⠄⢄⣠⣴⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⢹⣿⣿⣿⣿⡿⣿⣷⣬⡻⠇⠌⡁⠄⠄⠄⠄⠄",
            -- "⠈⠂⠜⠊⣴⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⢯⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡹⣿⣿⣷⠄⢤⡄⠄⠄⡂⠄⡀",
            -- "⡀⠖⠘⢰⣿⣿⣿⣿⣿⣿⣿⣿⣟⣶⢣⣿⣿⣿⣿⣿⣟⠟⣭⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡌⣿⣿⡂⢀⡁⠄⢈⡁⡀⣀",
            -- "⠆⠮⡸⠘⣿⣿⣿⣿⣿⣿⣿⢟⡾⣠⣿⣿⣿⣿⡿⠏⣱⣿⣿⣿⣿⣿⡧⠹⣿⣿⣿⣿⣿⣿⣯⡹⣿⡿⣿⣿⣷⣌⡻⣿⣿⣿⣿⣯⠻⣿⣿⣿⣞⢿⠁⣘⡃⢀⣟⣃⠒⣛",
            -- "⠄⠄⡇⢀⢹⣿⣿⣿⣿⡿⣱⣟⢣⣿⣿⣿⣿⢋⢡⣼⣿⠿⡻⣿⣿⣿⣗⡢⣝⢿⣿⣿⣿⣿⣿⣷⣄⠋⠝⢯⣛⢿⣷⣌⢿⣿⣿⣿⣷⡝⢿⣿⣿⣎⠸⣾⡀⢦⣄⣀⣀⡐",
            -- "⠂⢢⡔⢣⣥⠹⣿⣿⡿⣹⣿⡿⣼⣿⣿⡿⢱⢇⣿⣿⣋⠊⢸⣿⣿⣿⣿⣿⣬⠕⡍⢿⣿⣿⣿⣿⣿⣷⣄⢀⠼⡁⢻⣿⡎⢿⢿⣿⣿⣿⣆⢹⣿⣿⡆⣝⡣⡄⡛⢃⢛⣻",
            -- "⠿⣷⡻⣿⣏⣷⣸⡟⣱⣿⡟⠁⣿⣿⣿⠻⠋⣸⡟⢡⢳⣿⢼⢹⣿⣿⣿⣿⣿⣇⢺⠄⠉⣝⠻⢿⣿⣿⣿⣷⣮⣬⡀⡙⣿⣸⣧⢻⣿⣿⣿⣧⠙⠏⣠⡶⣇⣼⣿⣦⢶⣿",
            -- "⡄⢯⣝⣒⣯⣭⡇⢹⣿⣿⢁⠄⣿⣿⡟⠰⠆⡟⠌⠈⣿⣿⣇⢏⢿⣿⣿⣿⣿⣿⡜⣏⢦⢻⣆⢠⡲⢶⣔⢾⣿⣭⣛⠦⣝⠇⠙⠧⡹⣿⡛⠻⠄⣈⣥⣴⣧⣴⣛⣻⡞⢿",
            -- "⢾⣾⡗⣿⣿⣿⡇⣿⣿⡇⣧⠄⢹⣿⡇⣿⡧⠇⠛⠄⠶⣄⡝⠘⣌⢿⣿⣿⣿⣿⣿⡘⢦⠂⣿⠘⣛⣋⢬⡡⠤⠒⠒⠤⢜⠆⠄⠘⣛⠻⣧⡀⢸⣿⣽⣿⣿⣿⣿⣿⡿⣻",
            -- "⣿⣾⡿⣿⣽⣿⡇⣿⣿⠇⣿⡀⠄⢿⣷⠆⢀⣆⣟⠞⡆⣶⣌⠻⢌⢧⡻⣿⣿⣿⣿⣷⡑⡅⡿⢸⡷⡋⢡⢰⣾⣿⣼⣿⣆⢠⠄⠄⠄⠄⠈⢰⣸⣧⣯⣿⣿⡯⣟⣿⡟⢿",
            -- "⣿⣿⣻⣿⣿⣿⣳⢹⣿⡇⠘⢧⢀⠄⠙⢋⢻⣟⠻⣮⢝⣹⣛⠳⣿⣯⡳⣮⢝⠻⣿⣿⣿⣦⡣⣿⣿⣿⡡⣯⣭⡍⠼⢟⣯⡟⠁⠄⣦⡌⠌⣸⡇⣿⣿⣿⣿⣽⠿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣧⣝⢿⣄⢴⠄⠄⠄⢰⡐⣾⣿⣷⣶⣶⣶⣿⣿⣿⣿⣾⣷⣉⣶⣯⠭⣉⣭⣿⣿⣿⣿⣶⣶⣶⣿⣿⣿⢣⡾⣿⣿⡹⡔⢹⢏⣿⣿⣿⣿⣿⣿⢿⡿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣬⡭⠄⠠⠄⣷⣿⡸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢇⣿⡃⡿⣿⣇⢿⡆⣾⣿⣿⣿⣿⣿⣿⣿⣷⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣈⣾⢇⠄⢰⠄⠘⢿⣦⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡉⣮⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⣼⣾⡇⠃⣿⣿⣸⡿⣺⣿⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣧⣸⠃⣸⡃⠄⠄⠄⠄⠈⠈⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠙⠛⠁⠄⠄⣿⣿⣏⠃⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣏⡟⢲⣿⣇⠄⠄⠄⠄⠄⠄⠄⠻⣿⣿⣿⣿⣿⣿⣿⣿⣛⣛⣻⣿⣿⣿⣿⣿⣿⣿⣿⡿⠛⠄⠄⠄⠄⠄⠄⢹⣿⣽⡆⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣇⢿⠸⣿⣿⠄⠄⠄⠄⠄⠄⠄⠄⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠋⠄⠄⠄⠄⠄⠄⠄⠄⢸⣿⡇⣷⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⣷⣿⣿⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣋⡆⠤⣶⣀⡀⠄⠄⠄⠄⠄⢸⣿⡧⣿⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣸⣿⣿⣆⠄⠄⣠⣤⣶⣶⣿⣿⣿⠟⠁⠨⡛⢿⣿⣿⣿⣿⣿⡿⡛⠥⠞⠋⠁⠄⠘⣿⣿⣷⣄⣀⠄⢀⣿⣿⣇⢟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢉⣻⣿⣿⡀⣾⣿⣿⣿⣿⣿⣿⡿⣄⠄⠄⠈⠄⠉⠙⠛⠛⠉⠄⠄⠄⠄⠄⠄⢰⣷⡹⣿⣿⣿⣿⢇⣼⣿⢟⣵⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣤⣌⣛⡳⢿⣿⣿⣿⣿⣿⢛⣼⣿⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢘⣿⣿⡜⠿⣿⣥⣾⣤⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⣟⣉⣭⢰⣿⣿⡏⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢸⣿⣿⣿⡖⣾⣍⣙⠿⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⡿⠿⣿⣟⣻⣯⣭⣶⣾⣿⣿⣿⢏⣿⣿⣿⡇⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢸⣿⣿⣿⣿⡹⣿⣿⣿⣿⣷⣶⣾⣭⣭⣟⣛⣛⡿⠿⣿⣿⣿",
            -- "⣿⣿⢿⣛⣭⣭⣿⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢣⣾⣿⣿⣿⡇⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢸⣿⣿⣿⣿⣷⡹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣾",
            -- "⡟⣱⣿⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢃⣿⣿⣿⣿⣿⠇⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⢸⣿⣿⣿⣿⣿⣧⡹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣼",
            -- "⠀⠀⠀⠀⠀⠀⠀⢸⠿⣟⣽⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣻⣿⣧⠈⣿⣿⣾⣺⣷⣬⣻⠿⣿⣿⡆⠠⠁⠀⠀⠀⠀⠀",
            -- "⠀⠀⠀⢀⠄⢄⣠⣴⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⢹⣿⣿⣿⣿⡿⣿⣷⣬⡻⠇⠌⡁⠀⠀⠀⠀⠀",
            -- "⠈⠂⠜⠊⣴⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⢯⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡹⣿⣿⣷⠀⢤⡄⠀⠀⡂⠀⡀",
            -- "⡀⠖⠘⢰⣿⣿⣿⣿⣿⣿⣿⣿⣟⣶⢣⣿⣿⣿⣿⣿⣟⠟⣭⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡌⣿⣿⡂⢀⡁⠀⢈⡁⡀⣀",
            -- "⠆⠮⡸⠘⣿⣿⣿⣿⣿⣿⣿⢟⡾⣠⣿⣿⣿⣿⡿⠏⣱⣿⣿⣿⣿⣿⡧⠹⣿⣿⣿⣿⣿⣿⣯⡹⣿⡿⣿⣿⣷⣌⡻⣿⣿⣿⣿⣯⠻⣿⣿⣿⣞⢿⠁⣘⡃⢀⣟⣃⠒⣛",
            -- "⠀⠀⡇⢀⢹⣿⣿⣿⣿⡿⣱⣟⢣⣿⣿⣿⣿⢋⢡⣼⣿⠿⡻⣿⣿⣿⣗⡢⣝⢿⣿⣿⣿⣿⣿⣷⣄⠋⠝⢯⣛⢿⣷⣌⢿⣿⣿⣿⣷⡝⢿⣿⣿⣎⠸⣾⡀⢦⣄⣀⣀⡐",
            -- "⠂⢢⡔⢣⣥⠹⣿⣿⡿⣹⣿⡿⣼⣿⣿⡿⢱⢇⣿⣿⣋⠊⢸⣿⣿⣿⣿⣿⣬⠕⡍⢿⣿⣿⣿⣿⣿⣷⣄⢀⠼⡁⢻⣿⡎⢿⢿⣿⣿⣿⣆⢹⣿⣿⡆⣝⡣⡄⡛⢃⢛⣻",
            -- "⠿⣷⡻⣿⣏⣷⣸⡟⣱⣿⡟⠁⣿⣿⣿⠻⠋⣸⡟⢡⢳⣿⢼⢹⣿⣿⣿⣿⣿⣇⢺⠀⠉⣝⠻⢿⣿⣿⣿⣷⣮⣬⡀⡙⣿⣸⣧⢻⣿⣿⣿⣧⠙⠏⣠⡶⣇⣼⣿⣦⢶⣿",
            -- "⡄⢯⣝⣒⣯⣭⡇⢹⣿⣿⢁⠀⣿⣿⡟⠰⠆⡟⠌⠈⣿⣿⣇⢏⢿⣿⣿⣿⣿⣿⡜⣏⢦⢻⣆⢠⡲⢶⣔⢾⣿⣭⣛⠦⣝⠇⠙⠧⡹⣿⡛⠻⠀⣈⣥⣴⣧⣴⣛⣻⡞⢿",
            -- "⢾⣾⡗⣿⣿⣿⡇⣿⣿⡇⣧⠀⢹⣿⡇⣿⡧⠇⠛⠀⠶⣄⡝⠘⣌⢿⣿⣿⣿⣿⣿⡘⢦⠂⣿⠘⣛⣋⢬⡡⠤⠒⠒⠤⢜⠆⠀⠘⣛⠻⣧⡀⢸⣿⣽⣿⣿⣿⣿⣿⡿⣻",
            -- "⣿⣾⡿⣿⣽⣿⡇⣿⣿⠇⣿⡀⠀⢿⣷⠆⢀⣆⣟⠞⡆⣶⣌⠻⢌⢧⡻⣿⣿⣿⣿⣷⡑⡅⡿⢸⡷⡋⢡⢰⣾⣿⣼⣿⣆⢠⠀⠄⠀⠀⠈⢰⣸⣧⣯⣿⣿⡯⣟⣿⡟⢿",
            -- "⣿⣿⣻⣿⣿⣿⣳⢹⣿⡇⠘⢧⢀⠀⠙⢋⢻⣟⠻⣮⢝⣹⣛⠳⣿⣯⡳⣮⢝⠻⣿⣿⣿⣦⡣⣿⣿⣿⡡⣯⣭⡍⠼⢟⣯⡟⠁⠀⣦⡌⠌⣸⡇⣿⣿⣿⣿⣽⠿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣧⣝⢿⣄⢴⠀⠀⠀⢰⡐⣾⣿⣷⣶⣶⣶⣿⣿⣿⣿⣾⣷⣉⣶⣯⠭⣉⣭⣿⣿⣿⣿⣶⣶⣶⣿⣿⣿⢣⡾⣿⣿⡹⡔⢹⢏⣿⣿⣿⣿⣿⣿⢿⡿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣬⡭⠀⠠⠀⣷⣿⡸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢇⣿⡃⡿⣿⣇⢿⡆⣾⣿⣿⣿⣿⣿⣿⣿⣷⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣈⣾⢇⠄⢰⠀⠘⢿⣦⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡉⣮⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⣼⣾⡇⠃⣿⣿⣸⡿⣺⣿⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣧⣸⠃⣸⡃⠀⠀⠀⠀⠈⠈⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠙⠛⠁⠀⠀⣿⣿⣏⠃⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣏⡟⢲⣿⣇⠀⠀⠀⠀⠀⠀⠀⠻⣿⣿⣿⣿⣿⣿⣿⣿⣛⣛⣻⣿⣿⣿⣿⣿⣿⣿⣿⡿⠛⠀⠀⠀⠀⠀⠀⢹⣿⣽⡆⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣇⢿⠸⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠋⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡇⣷⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⣷⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣋⡆⠤⣶⣀⡀⠀⠀⠀⠀⠀⢸⣿⡧⣿⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣸⣿⣿⣆⠀⠀⣠⣤⣶⣶⣿⣿⣿⠟⠁⠨⡛⢿⣿⣿⣿⣿⣿⡿⡛⠥⠞⠋⠁⠀⠘⣿⣿⣷⣄⣀⠀⢀⣿⣿⣇⢟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢉⣻⣿⣿⡀⣾⣿⣿⣿⣿⣿⣿⡿⣄⠀⠀⠈⠀⠉⠙⠛⠛⠉⠀⠀⠀⠀⠀⠀⢰⣷⡹⣿⣿⣿⣿⢇⣼⣿⢟⣵⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣤⣌⣛⡳⢿⣿⣿⣿⣿⣿⢛⣼⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢘⣿⣿⡜⠿⣿⣥⣾⣤⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⣟⣉⣭⢰⣿⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡖⣾⣍⣙⠿⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿",
            -- "⣿⣿⣿⣿⣿⣿⣿⡿⠿⣿⣟⣻⣯⣭⣶⣾⣿⣿⣿⢏⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⡹⣿⣿⣿⣿⣷⣶⣾⣭⣭⣟⣛⣛⡿⠿⣿⣿⣿",
            -- "⣿⣿⢿⣛⣭⣭⣿⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢣⣾⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣷⡹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣾",
            -- "⡟⣱⣿⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢃⣿⣿⣿⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣧⡹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣼",
            -- [[⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⡠⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠀⠀⠀⠀⠀⢤⣠⡈⣷⠀⢹⢸⢸⣁⠔⠋⠙⣿⢻⣿⣿⣿⣿⣻⣿⣿⣿]],
            -- [[⣿⣿⣿⣿⣧⣿⣿⠀⠀⠀⠀⠀⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠊⠢⠀⠀⠁⠍⣵⣼⠠⢛⠞⠀⠀⠀⠒⠩⢞⣿⣿⣿⣿⣿⣿⣿⣿⣿]],
            -- [[⣿⣿⣿⣿⣿⣷⣿⠀⠀⠀⢀⠔⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠟⠁⢸⡇⠀⠠⡖⡠⢄⠀⠀⠀⠈⢹⣿⡿⡟⣿⣿⣿⣿]],
            -- [[⣿⣿⣿⣿⣿⣿⣿⠠⠀⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠀⠀⢿⡀⠀⠀⠂⠀⠑⠢⢄⠀⠀⣿⣽⡿⣿⣽⣿⣿]],
            -- [[⡿⣿⣏⣝⡿⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠷⠀⠀⠀⠀⢀⠀⠀⠙⢦⣯⣟⡿⣿⣿⣿⣿]],
            -- [[⣿⣾⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⡠⢠⠎⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢢⠀⠀⢸⣛⢻⣷⠻⢻⣿⣟]],
            -- [[⢽⢟⣦⡇⠀⠀⠀⠀⠀⠀⠀⡔⢡⠃⠀⠀⠀⠀⠠⡴⠊⠀⠀⠀⠠⡄⠀⠀⠀⠀⠀⠐⢄⠀⠀⠀⠀⠐⢄⠀⠀⠀⠀⠀⢀⠀⠀⠀⠣⠀⢀⣶⠀⠀⣴⣿⠽⠁]],
            -- [[⢾⢒⣉⣱⠀⠀⠀⠀⠀⢀⠌⢠⠃⠀⠀⠀⣠⢴⠋⠀⢀⠄⠀⠀⠈⡞⢄⠀⠀⠀⠀⠀⠈⠲⣆⣂⡀⣄⠀⠑⢄⠀⠀⠀⠀⠳⡀⠀⠀⠙⣼⣯⠉⠀⢿⣏⡟⠉]],
            -- [[⢾⢾⣍⠑⢧⠀⠀⠀⢀⠂⠀⡌⠀⠀⠀⡸⢯⠃⠀⡠⣣⠃⠀⠀⠀⠘⠌⠧⣀⠀⠀⠀⠀⠀⠘⢷⣶⣭⡧⡀⠈⢦⠀⠀⠀⠀⠸⣄⠀⠀⠸⣏⠉⠁⢽⣯⠀⠑]],
            -- [[⣶⡈⠙⡂⡈⢧⠀⠠⠁⠀⢠⡇⠀⠀⡐⣠⠋⢀⡔⡕⢻⢠⠀⠀⠀⠀⠀⢸⠊⣶⣄⡀⠀⠀⠀⠀⠙⠫⢢⣻⣄⠀⢃⠠⡀⠀⠀⠘⣆⠀⣰⠃⢀⣶⡈⣃⣴⣆]],
            -- [[⢿⠠⠄⢀⠁⠄⣦⠁⠀⢠⣿⡄⠀⢀⡟⣿⢀⢮⠳⠀⠈⡎⡄⠀⠀⠀⠀⠀⢇⢩⢳⠀⢻⠶⡒⠲⡒⠀⠤⢈⠺⠄⣸⣄⠱⡄⠀⣀⢸⣿⠡⠶⠃⠀⠴⠇⢃⠀]],
            -- [[⠊⠃⢀⠀⠁⣀⡏⠀⠀⡎⢾⣇⠀⢸⠉⢹⣼⣉⣎⡒⢢⢼⡜⡀⠀⠀⠀⠀⠈⣦⡣⣇⢸⣄⡬⠴⡌⢒⣶⣒⣛⠦⡹⣻⣯⣴⡀⢹⣿⠁⠀⡀⠀⠁⢠⠀⠈⠁]],
            -- [[⠀⠀⠉⠀⠀⠐⡇⠀⠀⡇⢸⣿⡀⠘⣨⡿⠻⢀⠏⡏⠲⢎⡸⡈⢄⠀⠀⠀⠀⠘⢕⢿⢸⠀⢀⣵⢾⠋⠁⠹⠈⠻⣟⣿⢿⣿⣿⣶⢹⠀⠀⡄⠀⠀⠠⠀⠐⠀]],
            -- [[⠀⠀⠉⠀⡀⠀⢳⠀⠀⣿⡜⢿⣿⣦⡡⡁⠤⣀⢚⠤⠄⢠⡃⠈⢄⡑⢦⢀⠀⠀⠈⠢⡌⠀⠀⠹⡧⠦⢤⣞⡀⠤⠀⣿⣭⠙⢯⡾⠀⣷⠀⠀⠀⠀⠀⠀⠀⠀]],
            -- [[⠀⠀⠀⠀⠀⠀⠀⠣⣄⠘⠏⢹⣿⣿⡏⢏⠀⠀⠉⠉⠉⠁⠀⠀⠀⠈⠂⠱⠉⠐⣲⠒⠀⠁⠀⠀⠈⠉⠉⠁⠀⠀⣰⢁⠀⠘⡌⢶⢀⠞⠀⠀⠀⠀⠀⠀⢀⠀]],
            -- [[⠀⠀⠀⠀⠀⠀⠀⠀⢀⠏⠀⣿⣿⣿⡈⢈⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡴⠁⢸⠀⠀⢱⠈⠏⠀⠀⠀⠀⠀⠀⠀⠈⠀]],
            -- [[⠀⠀⠀⠀⠀⠀⠀⠀⣟⠆⣸⢸⣏⣿⣷⡀⠉⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠉⠁⣸⣾⠀⠀⡄⡐⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            -- [[⠀⠀⠀⠀⠀⠀⠀⠀⡟⢠⡇⢸⣿⣿⣿⣿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣧⣶⣾⣿⣿⠀⠀⢡⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            -- [[⠀⠀⠀⠀⠀⠀⠀⠀⠆⢶⠀⠈⢻⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⠀⠐⠒⠂⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⣿⣿⣿⡇⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            -- [[⠀⠀⠀⠀⠀⠀⠀⠀⢧⡈⠄⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⢠⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            -- [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⣧⠀⠀⢸⣿⣿⣿⣿⠿⠟⠛⠛⠛⢛⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠞⢁⣷⣦⠈⠙⠻⣿⣿⣿⣿⠃⠀⠀⠘⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            -- [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⢋⡀⠀⠘⣿⠟⠉⠁⠀⠀⠀⠀⢰⣿⣧⣝⣲⣄⡀⠀⠀⣀⣴⣮⣴⣾⣿⣿⠟⡄⠀⠀⠈⠙⢻⡟⠀⠀⠤⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            -- [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠵⢄⡀⠹⠀⠀⠀⠀⠀⠀⡠⠂⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⠘⢦⠀⠀⢠⣎⡤⠔⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            -- [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠀⠀⣀⣠⠤⡔⠁⠀⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠁⠀⠀⢓⠦⠄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            -- [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠤⠒⠂⠉⠀⠀⡸⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠈⡄⠀⠀⠉⠉⠓⠒⠠⠤⢄⣀⠀⠀⠀⠀⠀⠀]],
            -- [[⠀⠀⢀⡀⠤⠄⠐⠂⠈⠁⠀⠀⠀⠀⠀⠀⠀⡰⠁⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠉⠆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠀⠀⠒⠂]],
            -- [[⢀⠔⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡴⠁⠀⠀⠀⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠘⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂]],
            -- [[⠋⠀⠐⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠌⠀⠀⠀⠀⠐⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠈⢂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            -- [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠢⢄⠀⠀⠀⠈⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⠈⠢⠀⠀⠀⣀⠧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            "⠀⠀          ⠉⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠻⣷⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀",
            "⠀⠀        ⠇⠁⠀⡀⡠⠔⠹⠆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢻⣷⣄⠀⠀⠀⠀⠀⠀⠀",
            "⠀⠀      ⢝⠟⠀⠀⠘⠌⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠤⠀⣀⣀⠙⢿⣦⡀⠀⠀⠀⠀⠀",
            "⠀⠀     ⠗⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡶⠃⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠉⠙⠶⣯⣇⣀⠀⠀⠀⠀",
            "⠀⠀    ⣫⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡴⠟⠋⠀⠀⠀⠀⠀⠠⠘⡀⠀⠈⡳⣦⡀⠀⠀⠀⠀⠙⢻⣷⡄⠀⠀",
            "⠀⠀   ⡾⠃⡐⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡤⠖⠉⠀⠀⠀⠀⠀⠀⠀⠀⢀⡆⠙⣆⠀⠁⠀⠙⢦⣀⠀⠀⠀⢸⣿⣿⡄⠀",
            "⠀⠀  ⢸⣇⡜⠀⢀⠆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠐⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⡇⠀⠈⢷⡈⠀⠀⠀⠙⢧⡀⠀⠸⣿⣿⠃⡀",
            "⠀⠀  ⢋⡽⠁⢀⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⡇⠀⠀⠀⠻⡆⠀⠀⠀⠂⠙⠆⢀⣿⣿⠀⠀",
            "   ⠀⢸⡇⢠⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡔⠀⠀⡠⠀⣴⠁⠀⠀⣴⠃⠀⢠⣿⡟⡝⠀⠀⠀⠀⠘⡀⠀⢀⠈⡆⠘⣮⢿⡇  ",
            "   ⠀⢸⣇⡿⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⢀⣠⡴⠿⠋⣀⣴⣾⢁⣼⠇⠀⣠⣾⠃⠀⣰⡿⠋⠀⣷⠀⠀⢰⠀⠀⠁⠀⠘⠀⣧⠀⢹⣯⢷  ",
            " ⠀ ⠀⠊⢿⢧⠃⠀⠀⠀⠀⠀⢠⡞⢀⣾⣿⣟⣥⣴⣾⣶⣿⣅⣞⡿⠀⣰⡿⠁⢀⠼⠋⠀⡰⢸⣼⡇⠀⣸⡆⠀⠀⠀⠀⡇⣿⠀⠈⣿⣧  ",
            "⠀⠀ ⠀⠼⡘⡞⠀⠀⠀⠀⠀⠀⣼⠃⣈⢤⠀⢀⣭⣝⡿⣿⣻⣼⣿⣿⠠⠋⠀⠂⠁⠀⢀⣼⠃⠷⠿⡇⠀⣿⡷⠀⠀⠀⢠⡇⡇⢸⠀⣿⣿  ",
            "   ⠀⠈⣿⠇⠀⠀⠀⠀⠀⠀⣿⣾⣿⠈⢷⣾⣿⣿⣷⣷⣽⡻⣿⣛⢀⣠⣤⡶⣊⣴⣿⢃⣴⣿⣿⠇⠼⢿⣿⠀⢀⡄⢸⣷⠇⢸⠀⣿⣿  ",
            "    ⡏⢻⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⢤⡀⠚⠛⢛⣿⣿⣿⣿⣿⣿⣼⣿⣷⣿⣿⣿⣷⣟⠻⢩⣶⣾⣷⣦⠙⣠⡾⠀⡼⠉⢠⢸⢰⣿⡟  ",
            "   ⣿⡇⣿⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣮⣽⣿⣿⣯⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠛⠿⣿⣿⣿⣇⠝⠁⠠⡓⠀⠄⣈⣿⡿⠑⠀⠀",
            "   ⣿⡇⣿⠀⠀⠀⠀⠀⠀⠀⣏⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣤⠶⣿⣻⣿⠃⠀⠀⢰⠀⠀⢡⢿⠟⠈⠄  ",
            "    ⡇⣿⠀⠀⠀⠀⠀⠀⠀⠻⢿⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣏⢟⣽⣿⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠀⠀⠀⠜⠀⠀⣴   ",
            "     ⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⡅⠀⠀⠀⠀⠀⠀⠈⠀⠀⢀⡏   ",
            "      ⡃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⣿⣿⣿⣿⣿⣿⣶⣿⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡇   ",
            "        ⣶⣤⣀⠀⠀⠰⣖⣶⠶⣤⢤⣷⣿⡻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠋⠁⠀⠀⠀⠀⠀⠀⢠⣶         ",
            "           ⣿⣦⣤⣹⣿⣿⣯⣿⢿⣿⣿⣾⣝⡿⣿⣿⣿⣿⡿⣿⡛⠉⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸          ",
            "           ⣾⣿⣿⣿⣿⣿⣭⣟⡷⣝⢿⣿⣿⣿⣷⣿⣽⣾⣿⣽⡇⠀⠀⠙⠳⢤⡰⢠⠀⠀⠀⠀⠈⣿         ",
            "         ⣟⠿⠻⢻⡿⣿⣿⣿⣿⣿⣿⣿⣷⣽⣻⢿⣿⣿⠹⣯⣿⣿⣖⠀⠀⠀⠀⠀⢹⠀⣀⠀⠀⠀⠀⣿         ",
            "         ⣵⣾⣷⡀⠻⣄⠈⠙⠛⠿⠿⠿⠿⠿⠿⠟⣪⢿⣿⣼⠿⠿⠛⢀⠀⠀⠀⠀⢨⡼⣿⠀⠀⠀⠀⣿         ",
            "       ⣽⣿⣿⣿⣿⣿⣦⡙⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣯⣿⣿⡆⠀⠀⠈⡎⣦⠀⠀⢸⣻⡏⣒⣒⣒⣒⡚⣯⣝⣻      ",
            "     ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⡝⣿⡇⠀⠀⠀⠣⢉⣧⣤⣼⢰⠧⢤⣤⣤⣤⣴⣿        ",
            "    ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠿⠿⠇⠀⠀⠀⠀⢸⢿⡟⡏⣽⡋⣏⣽⣭           ", -- "  ⠀⠀⠀⠀⠀⠀⠀⡰⠁⢃⣶⡿⣱⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⣄             ",
            -- "  ⠀⠀⠀⠀⠀⠀⡐⠁⣸⣾⣿⢿⢟⣫⣆⣹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡄           ",
            -- "  ⠀⠀⠀⠀⠀⠀⡢⣠⣿⣿⣧⣳⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣛⣿⠿⠿⣦⡀         ",
            -- "  ⠀⠀⠀⠀⠔⣨⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⢉⣼⣿⣿⣿⣿⣿⣿⣿⡿⣿⣿⣿⣶⣦⣉⠐        ",
            -- "  ⠀⠀⠀⠸⠔⣱⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⢋⣠⣴⣿⣿⣿⣿⣿⣟⣧⢿⣿⣷⢌⠙⢿⣿⣿⣿⣿⣦⡄      ",
            -- "  ⠀⠀⡔⢁⣼⢯⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⢛⣩⣶⣿⣿⣿⣿⣿⣿⣿⣿⡿⢹⣦⠹⣿⣾⣿⣦⡙⠿⣿⣿⣿⡇⠀⠀    ",
            -- "  ⠀⠀⡇⠸⢣⣿⡿⣹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣯⣵⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⢸⣿⣷⡈⢷⣿⣿⣿⣦⡘⢿⣿⣇⠀⠀    ",
            -- "  ⠀⢀⡴⢂⣾⡿⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠀⢸⣿⣿⣿⣄⢹⣿⣿⣿⣽⣦⣹⡿⠀⠀    ",
            -- "  ⠀⣿⡇⢸⡟⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⢫⣿⣿⢟⣿⠋⣾⣿⣿⠋⣼⣿⡟⠀⢠⢢⣿⣿⣿⣿⣧⢿⣿⡿⣷⢹⣧⠑⡀⢸    ",
            -- "  ⠀⠉⠛⠸⢀⣿⣿⣿⣿⣿⣿⣿⣿⣻⣿⡿⠟⢋⣀⣴⠿⠋⠁⡾⠃⣸⣿⠟⠁⣼⣿⠏⢀⣴⣿⠈⣿⣿⡏⣿⣿⣾⣿⣧⣿⠘⣿⡆⠐⡈⠀⠀  ",
            -- "    ⠉⡀⡘⣼⣿⣿⣿⣿⣿⡟⢡⡿⠁⠀⠠⠚⠋⠁⠉⠀⠺⠡⢀⣿⠏⢀⣾⡿⣃⣴⣿⢏⡇⠃⢸⣿⠇⢹⣿⣿⣿⣿⢸⠀⣿⣷⠀⠘⡀⠀  ",
            -- "    ⣃⢧⢡⣿⣿⣿⣿⣿⣿⠃⣼⠷⡛⣿⡿⠒⠢⢀⠀⠄⠃⠀⠀⣟⣴⣿⣽⣾⣿⡿⠃⣼⣈⣀⢸⣿⠀⢈⣿⣿⣿⡟⢸⢸⡇⣿⠀⠀⡇   ",
            -- "    ⣷⠀⣸⣿⣿⣿⣿⣿⣿⠀⠁⠀⣷⡈⠁⠀⠀⠈⠈⠂⢄⠀⠤⡿⠟⠛⢉⠵⠋⠀⡼⠋⠀⠀⣸⣃⡀⠀⣿⡿⢻⡇⠈⣸⡇⣿⠀⠀⣧   ",
            -- "⠀⠀⠀⠀⢰⡄⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⡛⢿⣥⣤⡤⠀⠀⠀⠀⠀⠀⠃⠀⠈⠀⠀⠀⠈⠠⣄⡖⠉⠁⠈⠙⣦⠟⢁⣿⢃⣶⡟⡇⡏⠀⢠    ",
            -- "   ⠀⢸⠀⣿⣿⣿⣿⣿⣿⣿⡀⠀⠀⠀⠑⠂⠀⠀⠐⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣤⣀⠀⠀⠀⠸⣢⣾⣟⢬⣿⣻⠷⠀⢀     ",
            -- "⠀⠀⠀⠀⢸⠀⣿⣿⣿⣿⣿⣿⣿⠰⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠛⣉⠀⠄⠀⣼⣿⣿⡏⣿⣿⡞⡀⣠      ",
            -- "⠀⠀⠀⠀⢸⠀⣿⣿⣿⣿⣿⣿⣿⣄⡀⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⡠⠂⠀⠀⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⣣        ",
            -- "⠀⠀⠀⠀⠘⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢺⣿⣿⣿⣿⣿⣿⣷         ",
            -- "⠀⠀⠀⠀⠀⠁⢼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣄⠀⠀⠀⠀⠀⠀⠉⠀⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣾⣿⣿⣿⣿⣿⣿          ",
            -- "⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠿⣿⣿⣏⠩⠉⣉⠛⡛⠈⠀⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⣿⣿⡟⠉⠉          ",
            -- "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠛⠆⠀⠀⠐⠀⡀⠀⠀⠁⠢⢀⠀⠀⠀⠀⢀⠀⢤⣶⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀          ",
            -- "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠁⠀⠀⠀⠀⠀⠒⠠⢈⠢⡀⠀⠀⠀⠈⠀⠂⠁⠀⠂⢸⣿⣿⣦⣌⡛⢏⡟⣿⣿⣿⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ",
            -- "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⣀⣄⡄⢀⠀⠀⠀⠀⠀⠀⠀⠈⠂⠄⡀⠀⠀⣆⠐⠀⠀⠩⣿⣿⣿⣿⣿⡆⣿⠿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ",
            -- "⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⠁⠈⢿⣄⠻⣷⣦⣤⣀⣀⣀⣀⣀⣀⣠⠕⡀⠀⠃⣀⣀⣤⡿⣿⣿⣿⣿⡗⢃⠀⣿⣿⣿⣿⠀⠀⠇⠀⠀⠀⠀⠀⠀⠀  ",
            -- "⠀⠀⠀⠀⠀⠀⠀⠂⠀⠀⠀⠀⠀⠙⢦⠙⣿⣿⣿⣿⣿⣿⣿⣿⣿⣆⠐⠀⠀⢹⣿⣿⣷⢱⠙⣿⣿⡇⠄⢰⠭⠭⠭⠭⢥⠐⠢⠄⠀⠀⠀⠀⠀⠀  ",
            -- "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⢢⠀⢸⣿⣿⣿⣜⡶⠘⠛⠃⡏⣘⡛⠛⠛⠛⠋⠀⢀⠀⠀⠀⠀⠀⠀⠀  ",
            -- "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣀⣀⣸⣿⣿⣿⣿⡇⡀⢠⢰⠂⢴⠰⠂⠒⠒⢰⠀⠈⠀⠀⠀⠀⠀⠀⠀  ",
            -- [[⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⡿⠿⢿⡻⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿]],
            -- [[⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠟⣛⣛⣛⡛⠛⠛⠛⢛⣋⣩⣭⣴⣶⣶⣿⣿⣿⣿⣶⣝⡻⣿⣯⣿⣿⣿⣿⣿⣿⣯⣿⣿⣿⣿⣿]],
            -- [[⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢟⣯⣭⣥⣴⣶⣿⣿⣿⡿⣿⣻⣯⣷⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣮⣝⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿]],
            -- [[⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢏⣱⣾⣿⣿⣿⣿⣿⣟⣿⣽⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣝⡻⣿⣿⣿⣽⣿⣿⣿⣿⣿]],
            -- [[⣿⣿⣿⣿⣿⣿⣿⡿⠛⣱⣾⢧⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣿⠿⣿⣿⣿⣿⣾⡻⣿⣿⣿⣿⣿⣿⣿]],
            -- [[⣿⣿⣿⣿⣿⣿⠋⣴⣿⣿⡏⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣾⣯⣭⣭⣤⣍⣛⡛⢻⣿⠛]],
            -- [[⣿⣿⣿⣿⣿⠏⣼⣿⣿⣿⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋⢀⣀]],
            -- [[⣿⣿⣿⡿⠋⡄⣿⣿⣿⡿⣿⣿⢟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣤⣶⣿⣿]],
            -- [[⣿⣿⡿⣴⢀⣷⣿⣿⣿⣿⣟⣱⣿⣿⣿⣿⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿]],
            -- [[⣿⣿⠇⣿⣆⣿⡜⣿⣱⡟⡞⣽⢿⣟⣵⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣝⢿⣿⣿]],
            -- [[⣿⣟⠘⣮⣻⣟⢿⣿⣿⢿⢻⡟⢯⣮⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣝⢿]],
            -- [[⣿⡏⣐⣮⣿⣾⣿⣿⣿⣾⣼⣿⣿⣿⣿⣿⢟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢟⣷⣿⣿⣿⣿⣿⣿⡿⣻⣿⣿⣿⣿⣿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦]],
            -- [[⡿⢸⣿⣟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢏⣵⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣫⣿⣿⣿⣿⣿⣿⣿⢟⣿⣿⣿⣿⣿⣷⢹⣿⣿⣹⣿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿]],
            -- [[⢁⣿⣾⡟⣿⣿⣿⣿⢯⣿⣿⣿⡟⢱⣿⣿⣿⣿⣿⣿⣿⣿⢟⠋⣡⣾⣿⣿⣿⣿⣿⡿⣻⣷⣿⣿⣿⣿⣿⣿⣿⡎⢿⣿⣷⢹⢻⣿⡞⣿⣿⣿⣟⢿⣿⣿]],
            -- [[⣿⣿⣟⣾⣿⣿⣿⢯⣿⣿⣿⡟⣽⣿⣿⣿⣿⡿⢟⡭⢵⣐⣵⣿⣿⣿⣿⣿⡿⣛⣯⣾⡟⣿⣿⣿⣿⣿⣿⣟⣿⢡⣯⢻⣿⣏⡏⠻⣿⡘⣿⣿⣿⣯⡝⣿]],
            -- [[⣿⢯⣾⣿⣿⢿⣿⣼⣿⣿⢏⢸⣿⣿⠟⢛⣠⣾⣟⢚⣿⠟⣿⣿⡛⣻⡯⡠⢰⣿⣿⡟⣸⣿⣿⣿⣿⣿⣟⣼⡟⢸⣿⣏⣿⣿⡇⣧⢻⣿⣸⣿⣿⣿⣿⡜]],
            -- [[⣱⣿⣿⣿⣿⣼⡏⣿⣿⢧⡇⡾⢫⣵⢰⣿⣿⢏⣱⣿⢏⣾⣿⣿⢱⢯⣾⣷⣿⣿⢏⢶⣿⣿⣿⣿⣿⡏⣸⣿⢷⣿⣿⣿⢹⣿⣇⣿⣧⢿⡏⣿⣿⣷⢹⣿]],
            -- [[⣿⣿⣿⣿⣿⣿⣿⣿⣟⡿⡵⣱⡟⡱⢋⡕⠵⠟⠛⣭⣾⠟⠋⠶⣯⣿⣿⣼⣿⢣⢮⣿⣿⣿⣿⡿⢫⢦⣿⣏⡾⠟⣫⣭⢸⡏⣵⣭⣭⡘⡇⢹⣿⣿⡟⣿]],
            -- [[⣿⣿⣿⣿⣫⣽⣿⣿⡿⡽⣽⡟⣈⡌⢮⣶⠿⢫⣾⣯⣵⣿⣿⣧⣼⣿⣿⣿⡟⣵⣿⣿⣿⢿⣫⣾⢛⣾⢯⣾⣾⣿⣿⣿⠾⠟⠛⠛⠿⣿⢿⠂⣿⣿⡇⣿]],
            -- [[⢻⣿⣿⢿⢿⣵⣿⣿⡁⢿⢟⣼⣿⠧⠛⢃⣤⣤⠤⣀⣙⠻⢿⣿⣽⣿⢿⣡⣾⣿⢿⣻⣵⣿⡿⣣⠿⣣⣿⣿⣿⡿⢋⣠⣼⡛⢷⣤⡄⠛⢾⠀⣿⣿⢧⣿]],
            -- [[⡆⢿⣿⢻⣿⣿⣿⡏⣇⠘⣾⣋⠖⢀⣴⣿⣿⣳⣿⣿⣿⡷⣠⢈⢷⣶⣾⣧⣶⣾⣿⣿⠿⢋⣚⣵⣿⣿⣿⡿⠋⣰⣿⣿⣿⢷⡇⣿⣿⣀⡇⠀⣿⣏⡞⣟]],
            -- [[⣿⡎⢸⣿⣿⣿⣿⣿⣿⡘⣿⣇⢠⣿⣿⣿⡟⢿⣿⣿⠿⣵⠃⠈⣿⣿⣿⣿⣷⣯⣿⣶⣿⣿⣿⣿⣿⣿⣿⣷⡞⠿⠿⠿⣻⡟⠀⣿⣿⡿⢜⢀⢟⣾⢣⡜]],
            -- [[⠸⡇⣌⡟⣿⣿⢿⣿⣿⢧⢻⣿⣾⣿⣿⣿⣧⣶⣿⣧⣜⣧⢄⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣖⢾⣷⣽⢗⣴⣿⡟⠀⢞⣼⣿⣳⣾⡇]],
            -- [[⠆⢻⣿⣿⣿⣿⢸⣿⣿⣷⡌⢿⣿⣿⣿⣝⡻⢿⣦⣭⡭⢭⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣽⣓⡶⠾⢟⣯⣾⢇⡟⢸⣿⣿⣿⣟⣄]],
            -- [[⡙⡀⢻⣸⣿⢹⢸⣿⣿⣌⢿⡞⣿⣿⣿⣿⣿⣿⣶⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⢈⣾⡇⣿⣿⣿⣿⢿]],
            -- [[⣧⢆⡈⣿⣿⢸⡏⣿⣿⠸⣿⣍⡹⣿⣿⣿⣟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣫⣷⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⢀⣿⠿⠁⣿⣿⣿⢸⡼]],
            -- [[⣿⡎⡅⠸⣿⢸⡇⣿⣿⣴⣝⡛⢷⡝⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣽⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢃⣾⠏⢰⠀⣿⣿⣿⢸⣇]],
            -- [[⣿⢷⣿⣆⠻⣿⣇⢸⣿⡏⣿⡇⢲⣤⢨⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⢃⣪⣴⠷⡿⡆⡟⣿⣿⢻⣿]],
            -- [[⡿⠸⣿⣿⡄⢳⣿⢸⣿⣷⢿⣿⠸⣿⣾⡾⣶⣌⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⣡⡸⣸⣿⢋⠷⣴⡇⢇⣿⣿⢸⡿]],
            -- [[⢷⡇⢻⣿⣿⡌⢿⡾⡽⣿⣞⠿⠞⢿⣓⣑⣛⡛⠋⠀⣝⡻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣾⣶⣿⣿⣿⣿⡿⠿⣋⣵⣿⡯⢳⣟⣵⣕⣽⣻⣧⣼⡿⣎⡾⣡]],
            -- [[⣿⡁⣿⣿⣿⣷⠘⣷⣻⣿⣿⣞⣿⣿⣿⣿⣿⡇⠀⠀⠈⠙⠒⠍⠙⠻⠿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⣋⣥⣾⣷⣾⣿⣿⣿⣿⣿⣿⣿⣿⢈⣿⡳⣩⣵⣿]],
            -- [[⣛⣥⡸⣿⣿⣿⣧⠸⣿⣿⣷⣽⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠛⠿⠟⠋⠀⠀⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣼⣿⣿⣿⣿⣿]],
            -- [[⣿⣿⣷⡜⠿⡿⣿⣇⠻⣿⣿⣿⣿⣿⣿⡟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿]],
            -- [[⣿⣿⣿⣿⣿⣾⣶⣽⡀⢻⣿⣿⣿⣿⢣⣎⣀⢀⡀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠿⡌⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿]],
            -- [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣠⠤⠤⠤⢤⣤⣤⣤⡤⠴⠖⠒⠋⠉⠉⠀⠀⠀⠀⠉⠢⢄⠀⠐⠀⠀⠀⠀⠀⠀⠐⠀⠀⠀⠀⠀]],
            -- [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠐⠒⠚⠋⠉⠀⠀⠀⢀⠀⠄⠐⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠢⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            -- [[⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡰⠎⠁⠀⠀⠀⠀⠀⠠⠀⠂⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠢⢄⠀⠀⠀⠂⠀⠀⠀⠀⠀]],
            -- [[⠀⠀⠀⠀⠀⠀⠀⢀⣤⠎⠁⡘⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠀⣀⠀⠀⠀⠀⠁⢄⠀⠀⠀⠀⠀⠀⠀]],
            -- [[⠀⠀⠀⠀⠀⠀⣴⠋⠀⠀⢰⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠁⠐⠒⠒⠛⠲⠤⢤⡄⠀⣤]],
            -- [[⠀⠀⠀⠀⠀⣰⠃⠀⠀⠀⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⡿⠿]],
            -- [[⠀⠀⠀⢀⣴⢻⠀⠀⠀⢀⠀⠀⡠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠛⠉⠀⠀]],
            -- [[⠀⠀⢀⠋⡿⠈⠀⠀⠀⠀⠠⠎⠀⠀⠀⠀⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            -- [[⠀⠀⣸⠀⠹⠀⢣⠀⠎⢠⢡⠂⡀⠠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠢⡀⠀⠀]],
            -- [[⠀⠠⣧⠑⠄⠠⡀⠀⠀⡀⡄⢠⡐⠑⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠢⡀]],
            -- [[⠀⢰⠯⠑⠀⠁⠀⠀⠀⠁⠃⠀⠀⠀⠀⠀⡠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⠈⠀⠀⠀⠀⠀⠀⢀⠄⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙]],
            -- [[⢀⡇⠀⠠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠔⠀⠀⠀⠀⠀⠀⠀⡠⠀⠀⠀⠀⠀⠈⡆⠀⠀⠆⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀]],
            -- [[⡾⠀⠁⢠⠀⠀⠀⠀⡐⠀⠀⠀⢠⡎⠀⠀⠀⠀⠀⠀⠀⠀⡠⣴⠞⠁⠀⠀⠀⠀⠀⢀⠄⠈⠀⠀⠀⠀⠀⠀⠀⢱⡀⠀⠈⡆⡄⠀⢡⠀⠀⠀⠠⡀⠀⠀]],
            -- [[⠀⠀⠠⠁⠀⠀⠀⡐⠀⠀⠀⢠⠂⠀⠀⠀⠀⢀⡠⢒⡊⠯⠊⠀⠀⠀⠀⠀⢀⠤⠐⠁⢠⠀⠀⠀⠀⠀⠀⠠⠀⡞⠐⡄⠀⠰⢰⣄⠀⢧⠀⠀⠀⠐⢢⠀]],
            -- [[⠀⡐⠁⠀⠀⡀⠀⠃⠀⠀⡰⡇⠀⠀⣠⡤⠟⠁⠠⡥⠀⣠⠀⠀⢤⠄⢐⢟⡏⠀⠀⢠⠇⠀⠀⠀⠀⠀⠠⠃⢠⡇⠀⠰⠀⠀⢸⠘⡄⠀⠇⠀⠀⠀⠀⢣]],
            -- [[⠎⠀⠀⠀⠀⠃⢰⠀⠀⡘⢸⢁⡔⠊⡏⠀⠀⡰⠎⠀⡰⠁⠀⠀⡎⡐⠁⠈⠀⠀⡰⡉⠀⠀⠀⠀⠀⢰⠇⠀⡈⠀⠀⠀⡆⠀⠸⠀⠘⡀⢰⠀⠀⠈⡆⠀]],
            -- [[⠀⠀⠀⠀⠀⠀⠀⠀⠠⢀⢊⠎⢠⢎⡴⢪⣊⣠⣤⠒⠁⣠⣴⣉⠐⠀⠀⠃⠀⡜⡑⠀⠀⠀⠀⢀⡔⡙⠀⠰⢁⣠⠔⠒⡇⢰⠊⠒⠒⢧⢸⡆⠀⠀⢠⠀]],
            -- [[⠀⠀⠀⠀⠔⠂⠀⠀⢀⢂⠂⢠⠷⢳⡑⠉⣀⡔⠁⠐⠊⠀⠀⠘⠃⠀⠀⠀⢠⠊⠀⠀⠀⡀⠔⠁⡤⠁⡐⠁⠁⠀⠀⠀⣁⣠⣤⣤⣀⠀⡀⣽⠀⠀⢸⠀]],
            -- [[⡄⠀⠀⡀⡀⠊⠀⠀⢾⡀⡠⠃⠀⣘⣤⡼⠛⠛⣛⠿⠦⣄⡀⠀⠂⠀⡀⠞⠁⠀⡀⠄⠊⠀⢀⠜⣀⠜⠀⠀⠀⢀⡴⠟⠃⢤⡈⠛⢻⣤⡁⣿⠀⠀⡘⠀]],
            -- [[⢹⡀⠀⡄⠀⠀⠀⢰⠸⣧⠁⠴⣩⡿⠋⠀⠀⠌⠀⠀⠀⢈⠟⡷⡈⠉⠁⠘⠉⠁⠀⠀⣀⡴⠥⠊⠀⠀⠀⢀⣴⠏⠀⠀⠀⡈⢸⠀⠀⠿⢸⣿⠀⠰⢡⠠]],
            -- [[⠀⢱⡇⠀⠀⠀⠀⠀⠀⢧⠀⠸⡟⠀⠀⠀⢠⡀⠀⠀⣀⠊⣼⣷⠀⠀⠀⠀⠈⠐⠀⠉⠀⠀⠀⠀⠀⠀⠀⠈⢡⣀⣀⣀⠄⢠⣿⠀⠀⢀⡣⡿⡠⠁⡜⢣]],
            -- [[⣇⢸⠳⢠⠀⠀⡀⠀⠀⡘⡄⠀⠁⠀⠀⠀⠘⠉⠀⠘⠣⠘⡻⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠩⡁⠈⠂⡨⠋⠀⢠⣿⡡⠃⠀⠌⠁⢸]],
            -- [[⣹⡄⠀⠀⠀⠀⡇⠀⠀⠈⢳⡀⠀⠀⠀⠢⢄⡀⠙⠒⢒⡒⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠂⠬⢉⣁⡠⠐⠁⡸⢠⡇⠀⠀⠀⠠⠻]],
            -- [[⢦⢿⡄⠇⠀⡆⡇⠀⠀⠳⡀⢡⠀⠀⠀⠀⠀⠀⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡷⠁⢸⠀⠀⠀⠀⡀]],
            -- [[⠘⡹⢷⠀⠀⡇⢰⠀⠀⣇⠀⠲⢆⠀⠀⠀⠠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠔⠈⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡿⠀⣀⣾⠀⠀⠀⡇⢃]],
            -- [[⠀⢱⢺⣇⠀⡇⢸⠀⠀⠋⠢⢤⡈⢢⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠂⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡼⠁⣰⡏⣿⠀⠀⠀⡇⠸]],
            -- [[⠀⡈⠀⠹⣄⠀⠸⡇⠀⢰⠀⢸⡍⠛⡗⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡼⠕⠋⣈⢀⢹⢠⠀⠀⡄⠀]],
            -- [[⢀⣇⠀⠀⢻⡌⠀⡇⠀⠈⡀⠀⣇⠀⠁⢁⠉⠳⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠞⢇⠇⠀⡴⣈⠋⢸⡸⠀⠀⡇⢀]],
            -- [[⡈⢸⡄⠀⠀⢳⡀⢁⢂⠀⠡⣀⣡⡀⠬⠮⠤⢤⣴⣿⠢⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⠉⠀⠀⠀⠀⢀⣀⠴⠊⠀⢐⡌⠠⠊⠪⠂⠄⠘⠃⢀⠱⢁⠞]],
            -- [[⠀⢾⠀⠀⠀⠈⣧⠈⠄⠀⠀⠡⠀⠀⠀⠀⠀⢸⣿⣿⣷⣦⣭⣲⣦⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⠴⠚⠁⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⡷⠀⢌⠖⠊⠀]],
            -- [[⠤⠚⢇⠀⠀⠀⠘⣇⠀⠀⠈⠂⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣤⣤⣀⣠⣴⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠃⠀⠀⠀⠀⠀]],
            -- [[⠀⠀⠈⢣⣀⢀⠀⠸⣄⠀⠀⠀⠀⠀⠀⢠⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
            -- [[⠀⠀⠀⠀⠀⠁⠉⠂⢿⡄⠀⠀⠀⠀⡜⠱⠿⡿⢿⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣀⢳⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀]],
        }

    dashboard.section.buttons.val = {
        dashboard.button("l", "  > last layout", "<cmd>lua require('persistence').load({ last = true })<CR>"),
        dashboard.button("p", "  > projects", "<cmd>lua require'telescope'.extensions.projects.projects{}<CR>"),
        dashboard.button("r", "  > recent", ":Telescope oldfiles<CR>"),
        dashboard.button("e", "  > new file", ":ene <BAR> startinsert <CR>"),
        dashboard.button("f", "  > find file", ":cd $HOME | Telescope find_files<CR>"),
        dashboard.button("q", "  > quit nvim", ":qa<CR>"),
    }
    alpha.setup(dashboard.opts)
    -- require("alpha").setup(require("alpha.themes.dashboard").config)
end

-- ldelossa/nvim-ide
M.config_nvim_ide = function()
    local bufferlist = require("ide.components.bufferlist")
    local explorer = require("ide.components.explorer")
    local outline = require("ide.components.outline")
    local callhierarchy = require("ide.components.callhierarchy")
    local timeline = require("ide.components.timeline")
    local terminal = require("ide.components.terminal")
    local terminalbrowser = require("ide.components.terminal.terminalbrowser")
    local changes = require("ide.components.changes")
    local commits = require("ide.components.commits")
    local branches = require("ide.components.branches")
    local bookmarks = require("ide.components.bookmarks")

    require("ide").setup({
        icon_set = "default", -- "nerd", "codicon", "default"
        log_level = "info", -- "debug", "warn", "info", "error"
        -- Component specific configurations and default config overrides.
        components = {
            -- The global keymap is applied to all Components before construction.
            -- It allows common keymaps such as "hide" to be overridden, without having
            -- to make an override entry for all Components.
            --
            -- If a more specific keymap override is defined for a specific Component
            -- this takes precedence.
            global_keymaps = {
                -- example, change all Component's hide keymap to "h"
                -- hide = h
                close = "X",
                collapse = "zc",
                collapse_all = "zC",
                details = "d",
                expand = "zo",
                help = "?",
                hide = "<C-[>",
                jump = "<CR>",
            },
            Bookmarks = {
                default_height = nil,
                disabled_keymaps = false,
                hidden = false,
                keymaps = {
                    jump_split = "<c-x>",
                    jump_tab = "t",
                    jump_vsplit = "<c-v>",
                    remove_bookmark = "D",
                },
            },
            Branches = {
                keymaps = {
                    create_branch = "c",
                    refresh = "r",
                    pull = "p",
                    push = "P",
                    set_upstream = "s",
                    help = "?",
                },
            },
            Changes = {
                keymaps = {
                    add = "s",
                    amend = "a",
                    commit = "c",
                    diff = "<CR>",
                    diff_tab = "t",
                    edit = "e",
                    expand = "zo",
                    help = "?",
                    restore = "r",
                },
            },
            Commits = {
                keymaps = {
                    checkout = "c",
                    details_tab = "D",
                    diff = "<CR>",
                    diff_split = "s",
                    diff_tab = "t",
                    diff_vsplit = "v",
                    help = "?",
                    refresh = "r",
                },
            },
            Timeline = {
                keymaps = {
                    help = "?",
                    hide = "<C-[>",
                    jump = "<CR>",
                    jump_split = "<C-x>",
                    jump_tab = "t",
                    jump_vsplit = "<C-v>",
                },
            },
            Explorer = {
                keymaps = require("ide.components.explorer.presets").nvim_tree,
            },
            Outline = {
                keymaps = {
                    help = "?",
                    hide = "<C-[>",
                    jump = "<CR>",
                    jump_split = "<C-x>",
                    jump_tab = "t",
                    jump_vsplit = "<C-v>",
                },
            },
        },
        -- default panel groups to display on left and right.
        panels = {
            left = "explorer",
            right = "git",
        },
        -- panels defined by groups of components, user is free to redefine the defaults
        -- and/or add additional.
        panel_groups = {
            explorer = {
                explorer.Name,
                outline.Name,
                callhierarchy.Name,
                bookmarks.Name, -- bufferlist.Name,
                -- terminalbrowser.Name,
            },
            terminal = { terminal.Name },
            git = { changes.Name, commits.Name, timeline.Name, branches.Name },
        },
        -- workspaces config
        workspaces = {
            -- which panels to open by default, one of: 'left', 'right', 'both', 'none'
            auto_open = "left",
        },
        -- default panel sizes for the different positions
        panel_sizes = {
            left = 30,
            right = 30,
            bottom = 15,
        },
    })
end

-- folke/edgy.nvim
M.init_edgy = function()
    -- views can only be fully collapsed with the global statusline
    vim.opt.laststatus = 3
    -- Default splitting will cause your main splits to jump when opening an edgebar.
    -- To prevent this, set `splitkeep` to either `screen` or `topline`.
    vim.opt.splitkeep = "screen"
end
M.opts_edgy = {
    keys = {
        -- close window
        ["<leader>qa"] = function(win)
            win:close()
        end,
        -- hide window
        ["<c-q>"] = function(win)
            win:hide()
        end,
        -- close sidebar
        ["<leader>Q"] = function(win)
            win.view.edgebar:close()
        end,
        -- next open window
        ["]w"] = function(win)
            win:next({
                visible = true,
                focus = true,
            })
        end,
        -- previous open window
        ["[w"] = function(win)
            win:prev({
                visible = true,
                focus = true,
            })
        end,
        -- next loaded window
        ["]W"] = function(win)
            win:next({
                pinned = false,
                focus = true,
            })
        end,
        -- prev loaded window
        ["[W"] = function(win)
            win:prev({
                pinned = false,
                focus = true,
            })
        end,
        -- increase width
        ["<c-w>>"] = function(win)
            win:resize("width", 2)
        end,
        -- decrease width
        ["<c-w><lt>"] = function(win)
            win:resize("width", -2)
        end,
        -- increase height
        ["<c-w>+"] = function(win)
            win:resize("height", 2)
        end,
        -- decrease height
        ["<c-w>-"] = function(win)
            win:resize("height", -2)
        end,
        -- reset all custom sizing
        ["<c-w>="] = function(win)
            win.view.edgebar:equalize()
        end,
    },
    bottom = { -- toggleterm / lazyterm at the bottom with a height of 40% of the screen
        {
            ft = "toggleterm",
            size = {
                height = 0.2,
            },
            -- exclude floating windows
            filter = function(buf, win)
                return vim.api.nvim_win_get_config(win).relative == ""
            end,
        },
        {
            ft = "lazyterm",
            title = "LazyTerm",
            size = {
                height = 0.2,
            },
            filter = function(buf)
                return not vim.b[buf].lazyterm_cmd
            end,
        },
        "Trouble",
        {
            ft = "qf",
            title = "QuickFix",
        },
        {
            ft = "help",
            size = {
                height = 20,
            },
            -- only show help buffers
            filter = function(buf)
                return vim.bo[buf].buftype == "help"
            end,
        },
        {
            ft = "spectre_panel",
            size = {
                height = 0.2,
            },
        },
    },
    left = { -- Neo-tree filesystem always takes half the screen height
        {
            title = "Neo-Tree",
            ft = "neo-tree",
            filter = function(buf)
                return vim.b[buf].neo_tree_source == "filesystem"
            end,
            size = {
                height = 0.6,
            },
        },
        {
            ft = "Outline",
            pinned = true,
            open = "SymbolsOutlineOpen",
        },
        {
            title = "Neo-Tree Git",
            ft = "neo-tree",
            filter = function(buf)
                return vim.b[buf].neo_tree_source == "git_status"
            end,
            pinned = true,
            open = "Neotree position=right git_status",
        }, -- {
        --   title = "Neo-Tree Buffers",
        --   ft = "neo-tree",
        --   filter = function(buf)
        --     return vim.b[buf].neo_tree_source == "buffers"
        --   end,
        --   pinned = true,
        --   open = "Neotree position=top buffers",
        -- },
        -- any other neo-tree windows
        "neo-tree",
    },
}

return M
